{# version 1.00, date 03/10/2016, auteur Florian Leriche #}
{% extends "InterventionBundle::layout.html.twig" %}

{% block stylesheets %}
    {{ parent() }}
    <link rel='stylesheet' href="{{ asset('css/styleFormEtablissement.css') }}"/>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('vendor/typeahead.js/dist/typeahead.jquery.js') }}"></script>
    <script src="{{ asset('vendor/typeahead.js/dist/bloodhound.js') }}"></script>
    <script>
        var villes = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('value'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            {#//prefetch: '{{ path("architecture_ville_autocomplete") }}',#}
            remote: {
                url: '{{ path("architecture_ville_autocomplete") }}?term=%QUERY',
                wildcard: '%QUERY'
            }
        });

        $('#etablissement_adresse_ville').typeahead(null, {
            name: 'villes',
            source: villes,
            limit: 50
        });

        var codesPostaux = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('value'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            {#//prefetch: '{{ path("architecture_ville_autocomplete") }}',#}
            remote: {
                url: '{{ path("architecture_code_autocomplete") }}?term=%QUERY',
                wildcard: '%QUERY'
            }
        });

        $('#etablissement_adresse_codePostal').typeahead(null, {
            name: 'codesPostaux',
            source: codesPostaux,
            limit: 5
        });


        $('#etablissement_adresse_ville').change(function () {
            var ville = $(etablissement_adresse_ville).val().toUpperCase();
            $('#etablissement_adresse_codePostal').val("");
            $.post("{{ path('architecture_code_postal') }}", {'ville': ville},
                    function (data, status) {
                        $('#etablissement_adresse_codePostal').val(data.codePostal);
                    });
        });

        $('#etablissement_adresse_codePostal').change(function () {
            var codePostal = $(etablissement_adresse_codePostal).val();
            $('#etablissement_adresse_ville').val("");
            $.post("{{ path('architecture_ville') }}", {'codePostal': codePostal},
                    function (data, status) {
                        $('#etablissement_adresse_ville').val(data.ville);
                    });
        });
    </script>
    <script type="application/javascript">
        document.getElementById('etablissement_TypeGeneral').addEventListener('change',function(e){
            switch (e.target.value){
                case 'ens' :
                    keepInstitute();
                    $('#etablissement_uai').show();
                    $('#uai').show();
                    break;
                case 'centre' :
                    keepCenter();
                    $('#etablissement_uai').hide();
                    $('#uai').hide();
                    $('#etablissement_uai').val('');
                    break;
                case 'autre' :
                    keepOther();
                    $('#etablissement_uai').hide();
                    $('#uai').hide();
                    $('#etablissement_uai').val('');
                    break;
            }
        });

        switch ($("#etablissement_TypeGeneral").val()){
            case 'ens' :
                keepInstitute();
                var typeEnseignement = "{{ etablissement.typeEnseignement }}";
                if(typeEnseignement == "college"){
                    $('#etablissement_typeEnseignement_2').prop("checked", true);
                }else if(typeEnseignement == "maternelle"){
                    $('#etablissement_typeEnseignement_0').prop("checked", true);
                } else if(typeEnseignement == "elementaire"){
                    $('#etablissement_typeEnseignement_1').prop("checked", true);
                } else if(typeEnseignement == "lycee"){
                    $('#etablissement_typeEnseignement_3').prop("checked", true);
                }else {
                    $('#etablissement_typeEnseignement_4').prop("checked", true);
                }
                $('#etablissement_uai').show();
                $('#uai').show();
                break;
            case 'centre' :
                keepCenter();
                var typeCentre = "{{ etablissement.typeCentre }}";

                if(typeCentre == "maternelle"){
                    $('#etablissement_typeCentre_0').prop("checked", true);
                }else if(typeCentre == "elementaire"){
                    $('#etablissement_typeCentre_1').prop("checked", true);
                } else if(typeCentre == "adolescent"){
                    $('#etablissement_typeCentre_2').prop("checked", true);
                } else{
                    $('#etablissement_typeCentre_3').prop("checked", true);
                }
                $('#etablissement_uai').hide();
                $('#uai').hide();
                $('#etablissement_uai').val('');
                break;
            case 'autre' :
                keepOther();
                var typeAutre = "{{ etablissement.typeAutreEtablissement }}";

                if(typeAutre == "mairie"){
                    $('#etablissement_typeAutreEtablissement_0').prop("checked", true);
                }else if(typeAutre == "maison de retraite"){
                    $('#etablissement_typeAutreEtablissement_1').prop("checked", true);
                }else{
                    $('#etablissement_typeAutreEtablissement_2').prop("checked", true);
                }
                $('#etablissement_uai').hide();
                $('#uai').hide();
                $('#etablissement_uai').val('');
                break;
        }

        function keepInstitute(){
            $("#typeEnseignement").show().removeAttr("disabled");
            $("#typeAutreEtablissement").hide().prop("disabled",true);
            $("#typeCentre").hide().prop("disabled",true);
        }

        function keepCenter(){
            $("#typeCentre").show().removeAttr("disabled");
            $("#typeAutreEtablissement").hide().prop("disabled",true);
            $("#typeEnseignement").hide().prop("disabled",true);

        }

        function keepOther(){
            $("#typeAutreEtablissement").show().removeAttr("disabled");
            $("#typeEnseignement").hide().prop("disabled",true);
            $("#typeCentre").hide().prop("disabled",true);
        }

        $(":submit").on('click', function( e ) {
            e.preventDefault();
            var adresse = $("#etablissement_adresse_adresse").val() + ' ' + $('#etablissement_adresse_codePostal').val() + ' ' + $("#etablissement_adresse_ville").val();
            var previousAdresse = "{{ etablissement.adresse.adresse }} " + "{{ etablissement.adresse.codePostal.code }} " + "{{ etablissement.adresse.ville.nom }}";
            if (adresse != previousAdresse) {
                var geolocalisation = '';
                $.get(location.protocol + '//nominatim.openstreetmap.org/search?format=json&q=' + adresse, function (data) {
                    switch (data.length) {
                        case 0 :
                            var ville = $("#etablissement_adresse_ville").val();
                            //Match numéro département avec nom ?
                            $.get(location.protocol + '//nominatim.openstreetmap.org/search?format=json&q=' + ville, function (dataVille) {
                                if (dataVille.length > 0) {
                                    geolocalisation = 'SRID=4326;POINT(' + dataVille[0]['lon'] + ' ' + dataVille[0]['lat'] + ')';
                                    $("#etablissement_adresse_geolocalisation").val(geolocalisation);
                                    $(".etablissement_admin_edit").submit();
                                }
                                else {
                                    //Que fait-on si 0 match ?
                                }
                            });
                            break;
                        case 1 :
                            geolocalisation = 'SRID=4326;POINT(' + data[0]['lon'] + ' ' + data[0]['lat'] + ')';
                            $("#etablissement_adresse_geolocalisation").val(geolocalisation);
                            $(".etablissement_admin_edit").submit();
                            break;
                        default :
                            var modal_content = "";
                            data.forEach(function (item) {
                                var latlon = item["lat"] + "," + item["lon"];
                                modal_content += "<div class='row'><label class='radio-inline'><input type='radio' name='type' id='" + latlon + "'>" + item["display_name"] + "</label></div>";
                            });
                            $('#choices').html(modal_content);
                            $("input:radio[name=type]:first").attr('checked', true);
                            $("#myModal").modal('show');
                    }
                });
            }
            else {
                $(".etablissement_admin_edit").submit();
            }
        });

        function setGeolocalisation(content){
            var latlon = content.split(',');
            var geolocalisation = 'SRID=4326;POINT(' + latlon[1] + ' ' + latlon[0] + ')';
            $("#etablissement_adresse_geolocalisation").val(geolocalisation);
            $(".etablissement_admin_edit").submit();
        }

        $(document).ready(function() {


            // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
            var $container = $('div#etablissement_emails');

            // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
            var index = $container.find(':input').length;

            // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
            $('#add_email').click(function(e) {
                addEmail($container);
                e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                return false;
            });

            // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un.
            if (index == 0) {
                var emails = JSON.parse('{{ emails|raw }}');
                var i = 0;
                emails.forEach(function () {
                    addEmail($container);
                    $("input[id=etablissement_emails_"+i+"]").val(emails[i]);
                    i++;
                })
            } else {
                // S'il existe déjà des catégories, on ajoute un lien de suppression pour chacune d'entre elles
                $container.children('div').each(function() {
                    addDeleteLink($(this));
                });
            }

            // La fonction qui ajoute un formulaire
            function addEmail($container) {
                // Dans le contenu de l'attribut « data-prototype », on remplace :
                // - le texte "__name__label__" qu'il contient par le label du champ
                // - le texte "__name__" qu'il contient par le numéro du champ
                var template = $container.attr('data-prototype')
                    .replace(/__name__label__/g, '' )
                    .replace(/__name__/g,        index)
                ;


                // On crée un objet jquery qui contient ce template
                var $prototype = $(template);

                addDeleteLink($prototype);

                // On ajoute le prototype modifié à la fin de la balise <div>
                $container.append($prototype);

                // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
                index++;
            }

            // La fonction qui ajoute un lien de suppression
            function addDeleteLink($prototype) {
                // Création du lien
                var $deleteLink = $('<a href="#" class="btn" style="padding-top: 0px !important; padding-bottom: 0px !important;  color:#3c3c3c; background-color:#fff;  display: inline; font-weight: 600; font-size: 25px; padding: 5px; height: 30px">×</a>');

                // Ajout du lien
                $prototype.append($deleteLink);

                // Ajout du listener sur le clic du lien pour effectivement supprimer
                $deleteLink.click(function(e) {
                    $prototype.remove();

                    e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                    return false;
                });
            }
        });
    </script>
{% endblock %}

{% block title %}

    Profil - {{ parent() }}

{% endblock %}

{% block body %}
    <style>

        @import 'https://fonts.googleapis.com/css?family=Ubuntu+Condensed&subset=latin-ext';
        h1{
            font-family: 'Ubuntu Condensed', sans-serif;
            margin-top: 40px;
        }

        #etablissement_emails label{
            font-family: "Source Sans Pro",Calibri,Candara,Arial,sans-serif;
            font-size: 15px !important;
        }

        #etablissement label{
            font-size: 15px !important;
            font-family: "Source Sans Pro",Calibri,Candara,Arial,sans-serif;
        }

        div{
            box-shadow: none !important;
        }

        input[type="text"], select{
            width: 350px !important;
            margin-left: 10px !important;
        }

        input[type="text"]:not([id^="etablissement_emails"]){
            text-transform: Uppercase;
        }

        input:focus, select:focus{
            outline: none !important;
            box-shadow: none !important;
            border-color: #CCCCCC !important;
        }

        .btn-default{
            border-radius: 10px !important;
            background-color: #3fb618 !important;
            border-color: #3fb618 !important;
        }

        hr{
            margin-top: 0px;
        }


        .btn-primary{
            margin-left: 30%;
        }

        .required{
            display: inline;
        }

        .required:after{
            content: "*";
            display: inline;
        }

        .emailDiv .col-sm-2{
            width: 0px !important;
        }

        .emailDiv .col-sm-10{
            padding-left: 15px !important;
        }

        .form-group a{
            border-radius: 100px !important;
            line-height : 1em !important;
            outline: hidden !important;
            padding-top: 0px !important;
            padding-bottom: 0px !important;
        }
        form{
            max-width: 450px;
            margin:auto;
        }
        @media(max-width: 767px){
            h3{
                margin-left: 10px !important;
            }
        }

        h2, h3{
            font-family: 'Ubuntu Condensed', sans-serif;
            margin-top: 40px;
        }
        h5{
            font-weight: 600;
        }

    </style>
    <h1>Modifier établissement</h1>
    <hr>

    {{ form_start(form, {'method': 'post', 'action': path('etablissement_admin_edit', {'id': etablissement.id}), 'attr': {'class': 'etablissement_admin_edit'}}) }}

    <h5> Nom :</h5>
    {{ form_widget(form.nom) }}

    <div class="emailDiv">
        <h5> Email :</h5>
        {{ form_widget(form.emails) }}
        <a href="#" id="add_email" class="btn btn-success" >Ajouter</a>
    </div>

    <h5> Téléphone fixe* :</h5>
    {{ form_widget(form.telFixe) }}

    <h5> Type d'établissement :</h5>
    {% if etablissement.enseignement  %}
        {{ form_widget(form.TypeGeneral, {'value':  'ens' })  }}
    {% elseif etablissement.centreLoisirs  %}
        {{ form_widget(form.TypeGeneral, {'value': 'centre'}) }}
    {% else %}
        {{ form_widget(form.TypeGeneral, {'value': 'autre'}) }}
    {% endif %}

    <div id="typeEnseignement">
        <h5> Type d'enseignement :</h5>
        {{ form_widget(form.typeEnseignement) }}
    </div>

    <div id="typeCentre">
        <h5> Type Centre de loisir :</h5>
        {{ form_widget(form.typeCentre) }}
    </div>

    <div id="typeAutreEtablissement">
        <h5> Type Autre Établissement :</h5>
        {{ form_widget(form.typeAutreEtablissement) }}
    </div>

    <h5 id="uai"> UAI :</h5>
    {{ form_widget(form.uai) }}

    <h5> Adresse :</h5>
    {{ form_widget(form.adresse.adresse) }}

    <h5> Complément :</h5>
    {{ form_widget(form.adresse.complement) }}

    <h5> Ville :</h5>
    {{ form_widget(form.adresse.ville) }}

    <h5> Code Postal :</h5>
    {{  form_widget(form.adresse.codePostal) }}
    {{ form_widget(form) }}
    <div>
        <a href="{{ path('etablissement_list') }}" class="btn btn-danger" style="margin-left:calc(50% - 140px)">Annuler</a>
        <input type="submit" value="Modifier" class="btn btn-primary"/>
    </div>

    {{ form_end(form) }}

    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title" id="myModalLabel">Plusieurs résultats concordent avec l'adresse que vous avez donnée !</h4>
                </div>
                <div class="modal-body">
                    <p> Veuillez choisir l'adresse dans la liste ci-dessous : </p>
                    <div id="choices"></div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Fermer</button>
                        <button id="realiserModal" type="button" class="btn btn-primary"
                                onclick="setGeolocalisation($('input:radio[name=type]:checked').attr('id'))">
                            OK
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

{% endblock %}

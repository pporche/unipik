{# version 1.00, date 14/05/2016, auteur Florian Leriche #}
{% extends "InterventionBundle::layout.html.twig" %}

{% block title %}

    Ajouter un établissement - {{ parent() }}

{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        #etablissement_adresse_ville {
            text-transform: uppercase;
        }
        .twitter-typeahead .tt-query,
        .twitter-typeahead .tt-hint {
            margin-bottom: 0;
        }
        .tt-hint {
            display: none;
            width: 100%;
            height: 43px;
            padding: 10px 18px;
            font-size: 14px;
            line-height: 1.428571429;
            color: #999;
            vertical-align: middle;
            background-color: #ffffff;
            border: 1px solid #cccccc;
            border-radius: 4px;
            -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
            box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
            -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
            transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        }
        .tt-menu {
            min-width: 160px;
            margin-top: 2px;
            padding: 5px 0;
            background-color: #ffffff;
            border: 1px solid #cccccc;
            border: 1px solid rgba(0, 0, 0, 0.15);
            border-radius: 4px;
            -webkit-box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);
            background-clip: padding-box;
            max-height: 150px;
            overflow-y: auto;

        }
        .tt-suggestion {
            display: block;
            padding: 3px 20px;
        }
        .tt-suggestion.tt-is-under-cursor {
            color: #fff;
            background-color: #428bca;
        }
        .tt-suggestion.tt-is-under-cursor a {
            color: #fff;
        }
        .tt-suggestion p {
            margin: 0;
        }

        @import 'https://fonts.googleapis.com/css?family=Ubuntu+Condensed&subset=latin-ext';
        h1{
            font-family: 'Ubuntu Condensed', sans-serif;
            margin-top: 40px;
        }

        .form-group:first-child{
            font-family: 'Ubuntu Condensed', sans-serif;
            font-size: 22px;
        }
        #etablissement_emails label{
            font-family: "Source Sans Pro",Calibri,Candara,Arial,sans-serif;
            font-size: 15px !important;
        }

        #etablissement label{
            font-size: 15px !important;
            font-family: "Source Sans Pro",Calibri,Candara,Arial,sans-serif;
        }

        div{
            box-shadow: none !important;
        }

        input[type="text"], select{
            width: 350px !important;
            margin-left: 10px !important;
        }
        input:focus, select:focus{
            outline: none !important;
            box-shadow: none !important;
            border-color: #CCCCCC !important;
        }

        .btn-default{
            border-radius: 10px !important;
            background-color: #3fb618 !important;
            border-color: #3fb618 !important;
        }

        hr{
            margin-top: 0px;
        }


        .btn-primary{
            margin-left: 30%;
        }

        form{
            padding-left: 25vw;
        }

        @media(max-width: 1060px){
            form{
                padding-left: 0vw;
            }
        }
        @media(max-width: 1260px && min-width: 1060px){
            form{
                padding-left: 15vw;
            }
        }

        .required{
            display: inline;
        }
        
        .required:after{
            content: "*";
            display: inline;
        }



    </style>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('vendor/typeahead.js/dist/typeahead.jquery.js') }}"></script>
    <script src="{{ asset('vendor/typeahead.js/dist/bloodhound.js') }}"></script>
    <script>
        var villes = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('value'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            {#//prefetch: '{{ path("architecture_ville_autocomplete") }}',#}
            remote: {
                url: '{{ path("architecture_ville_autocomplete") }}?term=%QUERY',
                wildcard: '%QUERY'
            }
        });

        $('#etablissement_adresse_ville').typeahead(null, {
            name: 'villes',
            source: villes,
            limit: 50
        });

        var codesPostaux = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('value'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            {#//prefetch: '{{ path("architecture_ville_autocomplete") }}',#}
            remote: {
                url: '{{ path("architecture_code_autocomplete") }}?term=%QUERY',
                wildcard: '%QUERY'
            }
        });

        $('#etablissement_adresse_codePostal').typeahead(null, {
            name: 'codesPostaux',
            source: codesPostaux,
            limit: 5
        });


        $('#etablissement_adresse_ville').change(function () {
            var ville = $(etablissement_adresse_ville).val().toUpperCase();
            console.log(ville);
            $('#etablissement_adresse_codePostal').val("");
            $.post("{{ path('architecture_code_postal') }}", {'ville': ville},
                function (data, status) {
                    $('#etablissement_adresse_codePostal').val(data.codePostal);
                });
        });

        $('#etablissement_adresse_codePostal').change(function () {
            var codePostal = $(etablissement_adresse_codePostal).val();
            console.log(codePostal);
            $('#etablissement_adresse_ville').val("");
            $.post("{{ path('architecture_ville') }}", {'codePostal': codePostal},
                function (data, status) {
                    $('#etablissement_adresse_ville').val(data.ville);
                });
        });

    </script>

    <script type="text/javascript">
        $(document).ready(function() {
            // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
            var $container = $('div#etablissement_emails');

            // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
            var index = $container.find(':input').length;

            // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
            $('#add_email').click(function(e) {
                addEmail($container);

                e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                return false;
            });

            // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un.
            if (index == 0) {
                addEmail($container);
            } else {
                // S'il existe déjà des catégories, on ajoute un lien de suppression pour chacune d'entre elles
                $container.children('div').each(function() {
                    addDeleteLink($(this));
                });
            }

            // La fonction qui ajoute un formulaire CategoryType
            function addEmail($container) {
                // Dans le contenu de l'attribut « data-prototype », on remplace :
                // - le texte "__name__label__" qu'il contient par le label du champ
                // - le texte "__name__" qu'il contient par le numéro du champ
                var template = $container.attr('data-prototype')
                                .replace(/__name__label__/g, 'Email')
                                .replace(/__name__/g,        index)
                        ;

                // On crée un objet jquery qui contient ce template
                var $prototype = $(template);

                // On ajoute au prototype un lien pour pouvoir supprimer la catégorie
                addDeleteLink($prototype);

                // On ajoute le prototype modifié à la fin de la balise <div>
                $container.append($prototype);

                // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
                index++;
            }

            // La fonction qui ajoute un lien de suppression d'une catégorie
            function addDeleteLink($prototype) {
                // Création du lien
                var $deleteLink = $('<a href="#" class="btn btn-danger">Supprimer</a>');

                // Ajout du lien
                $prototype.append($deleteLink);

                // Ajout du listener sur le clic du lien pour effectivement supprimer la catégorie
                $deleteLink.click(function(e) {
                    $prototype.remove();
                    e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                    return false;
                });
            }
        });

        document.getElementById('etablissement_TypeGeneral').addEventListener('change',function(e){
            switch (e.target.value){
                case 'ens' :
                    keepInstitute();
                    break;
                case 'centre' :
                    keepCenter();
                    break;
                case 'autre' :
                    keepOther();
                    break;
            }
        });

        function keepInstitute(){
            $(".form-group:eq(5)").fadeIn("medium").removeAttr("disabled");
            $(".form-group:eq(6)").fadeOut("slow").prop("disabled",true);
            $(".form-group:eq(7)").fadeOut("slow").prop("disabled",true);
        }

        function keepCenter(){
            $(".form-group:eq(7)").fadeIn("medium").removeAttr("disabled");
            $(".form-group:eq(5)").fadeOut("slow").prop("disabled",true);
            $(".form-group:eq(6)").fadeOut("slow").prop("disabled",true);
        }

        function keepOther(){
            $(".form-group:eq(6)").fadeIn("medium").removeAttr("disabled");
            $(".form-group:eq(7)").fadeOut("slow").prop("disabled",true);
            $(".form-group:eq(5)").fadeOut("slow").prop("disabled",true);
        }
    </script>
{% endblock %}


{% block body %}

    <h1>Ajout d'un établissement</h1>
    <hr>
    <div class='well'>

        {{ form_start(form, {'method': 'post', 'action': path('etablissement_admin_add'), 'attr': {'class': 'etablissement_admin_add'}}) }}
        <div class="well">
            {{ form_row(form.emails) }}
            <a href="#" id="add_email" class="btn btn-default" >Ajouter</a>
        </div>
        {{ form_widget(form) }}
        <div>
            <input type="submit" value="Inscrire" class="btn btn-primary"/>
        </div>
        {{ form_end(form) }}

    </div>
{% endblock %}



{# version 1.01, date 13/05/2016, auteur Matthieu Martins-Baltar
   Modifié 15/09/2016, auteur François Decq#}
{% extends "UserBundle::layout.html.twig" %}

{% block title %}

    Inscrire un bénévole - {{ parent() }}

{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        #fos_user_registration_form_adresse_ville {
            text-transform: uppercase;
        }
        .twitter-typeahead .tt-query,
        .twitter-typeahead .tt-hint {
            margin-bottom: 0;
        }
        .tt-hint {
            display: none;
            width: 100%;
            height: 43px;
            padding: 10px 18px;
            font-size: 14px;
            line-height: 1.428571429;
            color: #999;
            vertical-align: middle;
            background-color: #ffffff;
            border: 1px solid #cccccc;
            border-radius: 4px;
            -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
            box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
            -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
            transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        }
        .tt-menu {
            min-width: 160px;
            margin-top: 2px;
            padding: 5px 0;
            background-color: #ffffff;
            border: 1px solid #cccccc;
            border: 1px solid rgba(0, 0, 0, 0.15);
            border-radius: 4px;
            -webkit-box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);
            background-clip: padding-box;
            max-height: 150px;
            overflow-y: auto;

        }
        .tt-suggestion {
            display: block;
            padding: 3px 20px;
        }
        .tt-suggestion.tt-is-under-cursor {
            color: #fff;
            background-color: #428bca;
        }
        .tt-suggestion.tt-is-under-cursor a {
            color: #fff;
        }
        .tt-suggestion p {
            margin: 0;
        }

        @import 'https://fonts.googleapis.com/css?family=Ubuntu+Condensed&subset=latin-ext';
        h1{
            font-family: 'Ubuntu Condensed', sans-serif;
            margin-top: 40px;
        }

        div{
            box-shadow: none !important;
        }

        input[type="text"], input[type="password"], select{
            width: 350px !important;
        }
        input:focus, select:focus{
            outline: none !important;
            box-shadow: none !important;
            border-color: #CCCCCC !important;
        }

        .btn-default{
            border-radius: 10px !important;
            background-color: #3fb618 !important;
            border-color: #3fb618 !important;
        }

        hr{
            margin-top: 0px;
        }


        .btn-primary{
            margin-left: 30%;
        }

        form{
            padding-left: 25vw;
        }

        @media(max-width: 1060px){
            form{
                padding-left: 0vw;
            }
        }
        @media(max-width: 1260px && min-width: 1060px){
            form{
                padding-left: 15vw;
            }
        }


        .required{
            display: inline;
        }

        .required:after{
            content: "*";
            display: inline;
        }


    </style>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('vendor/typeahead.js/dist/typeahead.jquery.js') }}"></script>
    <script src="{{ asset('vendor/typeahead.js/dist/bloodhound.js') }}"></script>
    {#<script src="{{ asset('vendor/leaflet/dist/leaflet.js') }}"></script>#}
    <script>
        var onResponsabiliteChecked = function (responsabilite, activite) {
            if ($(responsabilite).is(':checked')) {
                $(activite).prop("disabled", true);
                $(activite).prop("checked", true);
            } else {
                $(activite).prop("checked", false);
                $(activite).prop("disabled", false);
            }
        };

        for(i=0; i<4; i++){
            var responsabilite = "#fos_user_registration_form_responsabiliteActivite_" + i;
            var activite = "#fos_user_registration_form_activitesPotentielles_" + i;
            if ($(responsabilite).is(':checked')) {
                $(activite).prop("disabled", true);
                $(activite).prop("checked", true);
            }
        }

        $(document).ready(function() {
            for(i=0; i<4; i++){
                responsabiliteChecked("#fos_user_registration_form_responsabiliteActivite_" + i, "#fos_user_registration_form_activitesPotentielles_" + i);
            }
        });

        function responsabiliteChecked(responsabilite, activite) {
            $(responsabilite).change(function () {
                onResponsabiliteChecked($(this), activite);
            });
        }


        var substringMatcher = function(strs) {
            return function findMatches(q, cb) {
                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');

                // iterate through the pool of strings and for any string that
                // contains the substring `q`, add it to the `matches` array
                $.each(strs, function(i, str) {
                    if (substrRegex.test(str)) {
                        matches.push(str);
                    }
                });

                cb(matches);
            };
        };

        var villes = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('value'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            {#//prefetch: '{{ path("architecture_ville_autocomplete") }}',#}
            remote: {
                url: '{{ path("architecture_ville_autocomplete") }}?term=%QUERY',
                wildcard: '%QUERY'
            }
        });

        $('#fos_user_registration_form_adresse_ville').typeahead(null, {
            name: 'villes',
            source: villes,
            limit: 50
        });

        var codesPostaux = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('value'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            {#//prefetch: '{{ path("architecture_ville_autocomplete") }}',#}
            remote: {
                url: '{{ path("architecture_code_autocomplete") }}?term=%QUERY',
                wildcard: '%QUERY'
            }
        });

        $('#fos_user_registration_form_adresse_codePostal').typeahead(null, {
            name: 'codesPostaux',
            source: codesPostaux,
            limit: 5
        });

        $('.tt-dataset.tt-dataset-villes').mouseleave(function(){
            var ville  = $(fos_user_registration_form_adresse_ville).val().toUpperCase();
            $('#fos_user_registration_form_adresse_codePostal').val("");
            $.post("{{ path('architecture_code_postal') }}", {'ville': ville},
                function (data, status) {
                    $('#fos_user_registration_form_adresse_codePostal').val(data.codePostal);
                });
        });


        $('#fos_user_registration_form_adresse_ville').change(function(){
            var ville  = $(fos_user_registration_form_adresse_ville).val().toUpperCase();
            $('#fos_user_registration_form_adresse_codePostal').val("");
            $.post("{{ path('architecture_code_postal') }}", {'ville': ville},
                function (data, status) {
                    $('#fos_user_registration_form_adresse_codePostal').val(data.codePostal);
                });
        });

        $('.tt-dataset.tt-dataset-codesPostaux').mouseleave(function(){
            var codePostal  = $(fos_user_registration_form_adresse_codePostal).val();
            $('#fos_user_registration_form_adresse_ville').val("");
            $.post("{{ path('architecture_ville') }}", {'codePostal': codePostal},
                    function (data, status) {
                        $('#fos_user_registration_form_adresse_ville').val(data.ville);
                    });
        });

        $('#fos_user_registration_form_adresse_codePostal').change(function(){
            var codePostal  = $(fos_user_registration_form_adresse_codePostal).val();
            $('#fos_user_registration_form_adresse_ville').val("");
            $.post("{{ path('architecture_ville') }}", {'codePostal': codePostal},
                function (data, status) {
                    $('#fos_user_registration_form_adresse_ville').val(data.ville);
                });
        });

        $(":submit").on('click', function( e ) {
            e.preventDefault();
            if ($('#fos_user_registration_form_telFixe').val().trim().length==0 && $('#fos_user_registration_form_telPortable').val().trim().length==0) {
                $('#fos_user_registration_form_telPortable').after('<p style="color: red; font-weight: 400;">Vous devez remplir au moins le téléphone fixe ou le téléphone portable</p>');
            }
            else {
                var adresse = $("#fos_user_registration_form_adresse_adresse").val() + ' ' + $('#fos_user_registration_form_adresse_codePostal').val() + ' ' + $("#fos_user_registration_form_adresse_ville").val();
                var geolocalisation = '';
                $.get(location.protocol + '//nominatim.openstreetmap.org/search?format=json&q='+adresse, function (data) {
                    switch (data.length) {
                        case 0 :
                            var ville = $("#fos_user_registration_form_adresse_ville").val();
                            //Match numéro département avec nom ?
                            $.get(location.protocol + '//nominatim.openstreetmap.org/search?format=json&q='+ville, function (dataVille) {
                                if (dataVille.length > 0) {
                                    geolocalisation = 'SRID=4326;POINT(' + dataVille[0]['lon'] + ' ' + dataVille[0]['lat'] + ')';
                                    $("#fos_user_registration_form_adresse_geolocalisation").val(geolocalisation);
                                    $(".fos_user_admin_register").submit();
                                }
                                else {
                                    //Que fait-on si 0 match ?
                                }
                            });
                            break;
                        case 1 :
                            geolocalisation = 'SRID=4326;POINT(' + data[0]['lon'] + ' ' + data[0]['lat'] + ')';
                            $("#fos_user_registration_form_adresse_geolocalisation").val(geolocalisation);
                            $(".fos_user_admin_register").submit();
                            break;
                        default :
                            var modal_content = "";
                            data.forEach(function (item) {
                                var latlon = item["lat"] + "," + item["lon"];
                                modal_content += "<div class='row'><label class='radio-inline'><input type='radio' name='type' id='" + latlon + "'>" + item["display_name"] + "</label></div>";
                            });
                            $('#choices').html(modal_content);
                            $("input:radio[name=type]:first").attr('checked', true);
                            $("#myModal").modal('show');
                    }
                });
            }
        });

        function setGeolocalisation(content){
            var latlon = content.split(',');
            var geolocalisation = 'SRID=4326;POINT(' + latlon[1] + ' ' + latlon[0] + ')';
            $("#fos_user_registration_form_adresse_geolocalisation").val(geolocalisation);
            $(".fos_user_admin_register").submit();
        }
    </script>
{% endblock %}

{% block fos_user_content %}
    <h1>Ajout d'un bénévole</h1><hr>
    {% include "UserBundle:Registration:register_content.html.twig" %}
{% endblock fos_user_content %}

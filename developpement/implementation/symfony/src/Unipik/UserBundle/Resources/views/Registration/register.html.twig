{# version 1.01, date 13/05/2016, auteur Matthieu Martins-Baltar
   Modifié 15/09/2016, auteur François Decq#}
{% extends "UserBundle::layout.html.twig" %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .twitter-typeahead .tt-query,
        .twitter-typeahead .tt-hint {
            margin-bottom: 0;
        }
        .tt-hint {
            display: none;
            width: 100%;
            height: 43px;
            padding: 10px 18px;
            font-size: 14px;
            line-height: 1.428571429;
            color: #999;
            vertical-align: middle;
            background-color: #ffffff;
            border: 1px solid #cccccc;
            border-radius: 4px;
            -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
            box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
            -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
            transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        }
        .tt-menu {
            min-width: 160px;
            margin-top: 2px;
            padding: 5px 0;
            background-color: #ffffff;
            border: 1px solid #cccccc;
            border: 1px solid rgba(0, 0, 0, 0.15);
            border-radius: 4px;
            -webkit-box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);
            background-clip: padding-box;
            max-height: 150px;
            overflow-y: auto;

        }
        .tt-suggestion {
            display: block;
            padding: 3px 20px;
        }
        .tt-suggestion.tt-is-under-cursor {
            color: #fff;
            background-color: #428bca;
        }
        .tt-suggestion.tt-is-under-cursor a {
            color: #fff;
        }
        .tt-suggestion p {
            margin: 0;
        }

        .tt-suggestion:hover {
            cursor: pointer;
            color: #fff;
            background-color: #09F;
        }
    </style>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('vendor/typeahead.js/dist/typeahead.jquery.js') }}"></script>
    <script src="{{ asset('vendor/typeahead.js/dist/bloodhound.js') }}"></script>
    <script>
        var onResponsabiliteChecked = function (responsabilite, activite) {
            if ($(responsabilite).is(':checked')) {
                $(activite).prop("disabled", true);
                $(activite).prop("checked", true);
            } else {
                $(activite).prop("checked", false);
                $(activite).prop("disabled", false);
            }
        };

        for(i=0; i<4; i++){
            var responsabilite = "#fos_user_registration_form_responsabiliteActivite_" + i;
            var activite = "#fos_user_registration_form_activitesPotentielles_" + i;
            if ($(responsabilite).is(':checked')) {
                $(activite).prop("disabled", true);
                $(activite).prop("checked", true);
            }
        }

        $(document).ready(function() {
            for(i=0; i<4; i++){
                responsabiliteChecked("#fos_user_registration_form_responsabiliteActivite_" + i, "#fos_user_registration_form_activitesPotentielles_" + i);
            }
        });

        function responsabiliteChecked(responsabilite, activite) {
            $(responsabilite).change(function () {
                onResponsabiliteChecked($(this), activite);
            });
        }


        var substringMatcher = function(strs) {
            return function findMatches(q, cb) {
                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');

                // iterate through the pool of strings and for any string that
                // contains the substring `q`, add it to the `matches` array
                $.each(strs, function(i, str) {
                    if (substrRegex.test(str)) {
                        matches.push(str);
                    }
                });

                cb(matches);
            };
        };

        var villes = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('value'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            //prefetch: '{{ path("user_admin_register_city_autocomplete") }}',
            remote: {
                url: '{{ path("user_admin_register_city_autocomplete") }}?term=%QUERY',
                wildcard: '%QUERY'
            }
        });

        $('#fos_user_registration_form_adresse_ville').typeahead(null, {
            name: 'villes',
            source: villes,
            limit: 50
        });


    </script>
{% endblock %}

{% block fos_user_content %}
    <h1>Ajout d'un bénévole</h1><hr>
    {% include "UserBundle:Registration:register_content.html.twig" %}
{% endblock fos_user_content %}

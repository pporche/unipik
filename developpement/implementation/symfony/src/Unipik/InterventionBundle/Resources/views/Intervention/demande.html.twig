{# version 1.00, date 13/05/2016, auteur Matthieu Martins-Baltar #}
{% extends "InterventionBundle::layout.html.twig" %}

{% block title %}

    Demander une intervention - {{ parent() }}

{% endblock %}

{% block body %}
    <h2>Demande d'intervention</h2>
    <hr>
    {{ form_start(form, {'method': 'post', 'action': path('intervention_request', {id: id, etablissement: etablissement}), 'attr': {'class': 'intervention_request form-sm'}}) }}

    <h3> Etablissement</h3>

    <h5> Nom :</h5>
    {{ form_widget(form.Etablissement.nom) }}

    <h5> Tel Fixe :</h5>
    {{ form_widget(form.Etablissement.telFixe) }}

    {#<div class="emailDiv">#}
        {#<h5> Emails :</h5>#}
        {#{{ form_widget(form.Etablissement.emails) }}#}
    {#</div>#}

    <h5> Type d'etablissement* :</h5>
    {{ form_widget(form.Etablissement.TypeGeneral) }}

    {% if etablissement.enseignement %}
        <h5> Type d'enseignement* :</h5>
        {{ form_widget(form.Etablissement.typeEnseignement) }}
    {% endif %}

    {% if etablissement.centreLoisirs %}
        <h5> Type Centre de Loisir* :</h5>
        {{ form_widget(form.Etablissement.typeCentre) }}
    {% endif %}

    {% if etablissement.autreEtablissement %}
        <h5> Type Autre Etablissement* :</h5>
        {{ form_widget(form.Etablissement.typeAutreEtablissement) }}
    {% endif %}

    <div id="uai">
        <h5> UAI :</h5>
        {{ form_widget(form.Etablissement.uai) }}
    </div>

    <h5> Adresse* :</h5>
    {{ form_widget(form.Etablissement.adresse.adresse) }}

    <h5> Complément :</h5>
    {{ form_widget(form.Etablissement.adresse.complement) }}

    <h5> Ville* :</h5>
    {{ form_widget(form.Etablissement.adresse.ville) }}

    <h5> Code Postal* :</h5>
    {{ form_widget(form.Etablissement.adresse.codePostal) }}
    <div id="code">
        Code postal au mauvais format
    </div>

    <h3> Plage de dates</h3>

    <h5> Début* :</h5>
    {{ form_widget(form.plageDate.debut) }}

    <h5> Fin* :</h5>
    {{ form_widget(form.plageDate.fin) }}

    <div class="jours">
        <h3> Jours de l'intervention *</h3>
        {{ form_widget(form.jour) }}
    </div>

    <h3> Intervention * </h3>
    <div id="intervention">
        Veuillez remplir une intervention
    </div>
    {{ form_widget(form.Intervention) }}


    <h3> Contact</h3>
    <h5> Email* :</h5>
    {{ form_widget(form.Contact.email) }}
    <div id="email">
        Email au mauvais format
    </div>

    <h5> Nom* :</h5>
    {{ form_widget(form.Contact.nom) }}

    <h5> Prénom :</h5>
    {{ form_widget(form.Contact.prenom) }}


    <h5> Tel Fixe :</h5>
    {{ form_widget(form.Contact.telFixe) }}
    <div id="numeroFixe">
        Numéro de téléphone au mauvais format
    </div>

    <h5> Tel Portable :</h5>
    {{ form_widget(form.Contact.telPortable) }}
    <div id="numeroPortable">
        Numéro de téléphone au mauvais format
    </div>

    <h5> Type Contact* :</h5>
    {{ form_widget(form.Contact.typeContact) }}

    <h5></h5>

    {{ form_widget(form.Contact.respoEtablissement) }}

    <h5></h5>

    {{ form_widget(form.Valider_la_demande) }}

    {{ form_end(form) }}
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset("vendor/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css") }}"/>
    <link rel='stylesheet' href="{{ asset('css/demandes.css') }}"/>

    <style>
         #intervention, #numeroFixe, #numeroPortable, #code, #email {
            font-size : 13px;
            font-style : italic;
            color : red;
        }

         .error, .errorMail {
             border: solid 2px #FF0000;
         }

        h3 {
            margin-left: -50px !important;
        }

        .emailDiv .col-sm-2 {
            width: 0px !important;
        }

        .emailDiv .col-sm-10 {
            padding-left: 15px !important;
        }

        .form-group a {
            border-radius: 100px !important;
            line-height: 1em !important;
            outline: hidden !important;
            padding-top: 0px !important;
            padding-bottom: 0px !important;
        }

        #demande_Etablissement_adresse_ville {
            text-transform: uppercase;
        }

    </style>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset("vendor/bootstrap-datepicker/dist/js/bootstrap-datepicker.js") }}"></script>
    <script src="{{ asset("vendor/bootstrap-datepicker/dist/locales/bootstrap-datepicker.fr.min.js") }}"></script>
    <script src="{{ asset('vendor/typeahead.js/dist/typeahead.jquery.js') }}"></script>
    <script src="{{ asset('vendor/typeahead.js/dist/bloodhound.js') }}"></script>

    <script type="application/javascript">

        $('#demande_plageDate_debut').datepicker({
            format: 'dd-mm-yyyy',
            language: 'fr',
            startDate: 'today',
            autoclose: true
        }).on('changeDate', function (selected) {
            $('#demande_plageDate_fin').datepicker('setStartDate', new Date(selected.date.valueOf()));
        });
        $('#demande_plageDate_fin').datepicker({
            format: 'dd-mm-yyyy',
            language: 'fr',
            startDate: 'today',
            autoclose: true
        }).on('changeDate', function (selected) {
            $('#demande_plageDate_debut').datepicker('setEndDate', new Date(selected.date.valueOf()));
        });

        var villes = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('value'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            //prefetch: '{{ path("architecture_ville_autocomplete") }}',
            remote: {
                url: '{{ path("architecture_ville_autocomplete") }}?term=%QUERY',
                wildcard: '%QUERY'
            }
        });

        $('#demande_Etablissement_adresse_ville').typeahead(null, {
            name: 'villes',
            source: villes,
            limit: 50
        });

        var codesPostaux = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('value'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            //prefetch: '{{ path("architecture_ville_autocomplete") }}',
            remote: {
                url: '{{ path("architecture_code_autocomplete") }}?term=%QUERY',
                wildcard: '%QUERY'
            }
        });

        $('#demande_Etablissement_adresse_codePostal').typeahead(null, {
            name: 'codesPostaux',
            source: codesPostaux,
            limit: 5
        });

        $('#demande_Etablissement_adresse_ville').change(function () {
            var ville = $(demande_Etablissement_adresse_ville).val().toUpperCase();
            $('#demande_Etablissement_adresse_codePostal').val("");
            $.post("{{ path('architecture_code_postal') }}", {'ville': ville},
                function (data, status) {
                    $('#demande_Etablissement_adresse_codePostal').val(data.codePostal);
                });
        });

        $('#demande_Etablissement_adresse_codePostal').change(function () {
            var codePostal = $(demande_Etablissement_adresse_codePostal).val();
            $('#demande_Etablissement_adresse_ville').val("");
            $.post("{{ path('architecture_ville') }}", {'codePostal': codePostal},
                function (data, status) {
                    $('#demande_Etablissement_adresse_ville').val(data.ville);
                });
        });

        var addInterElt = document.createElement('a');
        addInterElt.id = 'add_intervention';
        buttonAddElement = document.createElement('button');
        buttonAddElement.className = 'btn btn-success';
        buttonAddElement.textContent = 'Ajouter une Intervention';
        addInterElt.appendChild(buttonAddElement);
        document.getElementById('demande_Intervention').appendChild(addInterElt);

        function displayTypeIntervention(e) {
            var parNode = '';
            var valueToChk = '';
            if (e.hasOwnProperty('originalEvent')) {
                parNode = e.target;
                parNode = parNode.parentNode;
                parNode = parNode.parentNode;
                parNode = parNode.parentNode;
                valueToChk = e.target.value;
            } else {
                parNode = e;
                valueToChk = parNode.value;
                parNode = parNode.parentNode;
                parNode = parNode.parentNode;
                parNode = parNode.parentNode;
            }

            var matClasElt = parNode.getElementsByClassName('form-group')[2];
            var matFriElt = parNode.getElementsByClassName('form-group')[3];
            var remarquesElt = parNode.getElementsByClassName('form-remarques')[0].parentNode.parentNode;
            var descriptionAutreInterventionElt = parNode.getElementsByClassName('form-description')[0].parentNode.parentNode;
            var anneeScolaireElt = parNode.getElementsByClassName('form-annee-scolaire')[0].parentNode.parentNode;
            var themElt = parNode.getElementsByClassName('form-theme-pld')[0].parentNode.parentNode.parentNode.parentNode.parentNode;
            var lblMatElt = parNode.getElementsByTagName('label')[1];
            switch (valueToChk) {
                case 'frim' :
                    $(matClasElt).hide().prop('disabled', true);
                    $(matFriElt).show().prop('disabled', false);
                    $(anneeScolaireElt).show().find('select').prop('disabled', false).prop('required', true).find('input').prop('disabled', false);
                    $(themElt).hide().find('select').prop('disabled', true).prop('required', false).find('input').prop('disabled', true);
                    $(lblMatElt).hide().prop('disabled', true);
                    $(descriptionAutreInterventionElt).hide().prop('disabled', true);
                    $(remarquesElt).show().prop('disabled', false);
                    break;
                case 'pld' :
                    $(lblMatElt).show().prop('disabled', false);
                    $(matFriElt).hide().prop('disabled', true);
                    $(matClasElt).show().prop('disabled', false);
                    $(anneeScolaireElt).show().find('select').prop('disabled', false).prop('required', true).find('input').prop('disabled', false);
                    $(themElt).show().find('select').prop('disabled', false).prop('required', true).find('input').prop('disabled', false);
                    $(descriptionAutreInterventionElt).hide().prop('disabled', true);
                    $(remarquesElt).show().prop('disabled', false);
                    break;

                case 'aut' :
                    $(lblMatElt).hide().prop('disabled', true);
                    $(matClasElt).hide().prop('disabled', true);
                    $(matFriElt).hide().prop('disabled', true);
                    $(anneeScolaireElt).hide().find('select').prop('disabled', true).prop('required', false).find('input').prop('disabled', true);
                    $(themElt).hide().find('select').prop('disabled', true).prop('required', false).find('input').prop('disabled', true);
                    $(descriptionAutreInterventionElt).show().prop('disabled', false);
                    $(remarquesElt).show().prop('disabled', false);
                    break;
            }

            if (e.hasOwnProperty('originalEvent')) {
                e.stopImmediatePropagation();
            }
        }

        function treatmentInstitute(template, grade) {
            var taille = $(template).find('option').length;
            switch (grade) {
                case 'maternelle' :
                    for (i = 0; i < taille; i++) {
                        if (i >= 7) {
                            $(template).find('option:eq(' + i + ')').fadeOut().prop('disabled', true);
                        } else {
                            $(template).find('option:eq(' + i + ')').fadeIn().prop('disabled', false);
                        }
                    }
                    break;
                case 'elementaire' :
                    for (i = 0; i < taille; i++) {
                        if (i != 0 && (i < 7 || i > 15)) {
                            $(template).find('option:eq(' + i + ')').fadeOut().prop('disabled', true);
                        } else {
                            $(template).find('option:eq(' + i + ')').fadeIn().prop('disabled', false);
                        }
                    }
                    break;
                case 'college' :
                    for (i = 0; i < taille; i++) {
                        if (i != 0 && (i <= 15 || i > 19)) {
                            $(template).find('option:eq(' + i + ')').fadeOut().prop('disabled', true);
                        } else {
                            $(template).find('option:eq(' + i + ')').fadeIn().prop('disabled', false);
                        }
                    }
                    break;
                case 'lycee' :
                    for (i = 0; i < taille; i++) {
                        if (i != 0 && (i <= 19 || i > 22)) {
                            $(template).find('option:eq(' + i + ')').fadeOut().prop('disabled', true);
                        } else {
                            $(template).find('option:eq(' + i + ')').fadeIn().prop('disabled', false);
                        }
                    }
                    break;
                case 'superieur' :
                    for (i = 0; i < taille; i++) {
                        if (i != 0 && i <= 22) {
                            $($(template).find('option:eq(' + i + ')').get()[0]).fadeOut().prop('disabled', true);
                        } else {
                            $(template).find('option:eq(' + i + ')').fadeIn().prop('disabled', false);
                        }
                    }
                    break;
                default:
                    for (i = 0; i < taille; i++) {
                        $(template).find('option:eq(' + i + ')').fadeIn().prop('disabled', false);
                    }
                    break;
            }
        }

        function treatmentInterventionType(template, grade) {
            if (grade != 'elementaire') {
                $(template).find('option:eq(1)').fadeOut().prop('disabled', true);
            } else {
                $(template).find('option:eq(1)').fadeIn().prop('disabled', false);
            }
        }

        function treatmentCenter(template, grade) {
            var taille = $(template).find('option').length;
            switch (grade) {
                case 'maternelle' :
                    for (i = 0; i < taille; i++) {
                        if (i >= 7) {
                            $(template).find('option:eq(' + i + ')').fadeOut().prop('disabled', true);
                        } else {
                            $(template).find('option:eq(' + i + ')').fadeIn().prop('disabled', false);
                        }
                    }
                    break;
                case 'elementaire' :
                    for (i = 0; i < taille; i++) {
                        if (i != 0 && (i < 7 || i > 15)) {
                            $(template).find('option:eq(' + i + ')').fadeOut().prop('disabled', true);
                        } else {
                            $(template).find('option:eq(' + i + ')').fadeIn().prop('disabled', false);
                        }
                    }
                    break;
                case 'adolescent' :
                    for (i = 0; i < taille; i++) {
                        if (i != 0 && (i <= 15 || i > 22)) {
                            $(template).find('option:eq(' + i + ')').fadeOut().prop('disabled', true);
                        } else {
                            $(template).find('option:eq(' + i + ')').fadeIn().prop('disabled', false);
                        }
                    }
                    break;
                default:
                    for (i = 0; i < taille; i++) {
                        $(template).find('option:eq(' + i + ')').fadeIn().prop('disabled', false);
                    }
                    break;
            }
        }

        function treatmentOthers(template, grade) {
            var taille = $(template).find('option').length;
            for (i = 0; i < taille; i++) {
                $(template).find('option:eq(' + i + ')').fadeIn().prop('disabled', false);
            }
        }

        function treatmentSelect() {
            var choiceEtabElt = document.getElementsByTagName('select')[0];
            var type;
            switch (choiceEtabElt.value) {
                case 'ens' :
                    var inputElt = document.querySelector('input[name="demande[Etablissement][typeEnseignement]"]:checked');
                    if (inputElt != null) {
                        type = inputElt.value;
                        $('.form-annee-scolaire').each(function () {
                            treatmentInstitute($(this).get(0), type);
                        });
                        $('.form-type-intervention').each(function () {
                            treatmentInterventionType($(this).get(0), type);
                        });
                    }
                    break;
                case 'centre' :
                    var inputElt = document.querySelector('input[name="demande[Etablissement][typeCentre]"]:checked');
                    if (inputElt != null) {
                        type = inputElt.value;
                        $('.form-annee-scolaire').each(function () {
                            treatmentCenter($(this).get(0), type);
                        });
                        $('.form-type-intervention').each(function () {
                            treatmentInterventionType($(this).get(0), type);
                        });
                    }
                    break;
                case 'autre' :
                    var inputElt = document.querySelector('input[name="demande[Etablissement][typeAutreEtablissement]"]:checked');
                    if (inputElt != null) {
                        type = inputElt.value;
                        $('.form-annee-scolaire').each(function () {
                            treatmentOthers($(this).get(0), type);
                        });
                    }
                    break;
            }
        }

        function showSomeTheme(type, themesElt) {
            switch (type) {
                case 'maternelle' :
                    $(themesElt).find('option').each(function (index) {
                        if (index > 5) {
                            $(this).fadeOut();
                        } else {
                            $(this).fadeIn();
                        }
                    });
                    break;
                case 'elementaire' :
                case 'college' :
                case 'adolescent' :
                case 'lycee' :
                case 'Supérieur' :
                default :
                    showAllTheme(themesElt);
                    break;

            }
        }

        function showAllTheme(themesElt) {
            $(themesElt).find('option').each(function () {
                $(this).fadeIn();
            });
        }

        function displayThemeIntervention() {
            var themesElts = document.getElementsByClassName('form-theme-pld');
            if (themesElts.length == 0) {
                return;
            }
            var choiceEtabElt = document.getElementsByTagName('select')[0];
            var type;
            switch (choiceEtabElt.value) {
                case 'ens' :
                    var inputElt = document.querySelector('input[name="demande[Etablissement][typeEnseignement]"]:checked');
                    if (inputElt != null) {
                        type = inputElt.value;
                        for (i = 0; i < themesElts.length; i++) {
                            showSomeTheme(type, themesElts[i]);
                        }
                    }
                    break;
                case 'centre' :
                    var inputElt = document.querySelector('input[name="demande[Etablissement][typeCentre]"]:checked');
                    if (inputElt != null) {
                        type = inputElt.value;
                        for (i = 0; i < themesElts.length; i++) {
                            showSomeTheme(type, themesElts[i]);
                        }
                    }
                    break;
                case 'autre' :
                default :
                    for (i = 0; i < themesElts.length; i++) {
                        showAllTheme(themesElts[i]);
                    }
                    break;
            }

        }

        document.getElementById('demande_Etablissement_TypeGeneral').addEventListener('change', function (e) {
            var uaiElt = $(document.getElementById('demande_Etablissement_uai').parentNode.parentNode).get(0);
            switch (e.target.value) {
                case 'ens' :
                    keepInstitute();
                    $(uaiElt).fadeIn("fast");
                    break;
                case 'centre' :
                    keepCenter();
                    $(uaiElt).fadeOut("fast");
                    $('#demande_Etablissement_uai').val('');
                    break;
                case 'autre' :
                    keepOther();
                    $(uaiElt).fadeOut("fast");
                    $('#demande_Etablissement_uai').val('');
                    break;
            }
        });

        var typeInstitute = {{ typEnseignement | raw }} ;

        if (typeInstitute.hasOwnProperty('autre')) {
            $('#demande_Etablissement_TypeGeneral').val('autre').prop('disabled', true);
            level = typeInstitute['autre'];
            $("input[name='demande[Etablissement][typeAutreEtablissement]']").prop("readonly", true).attr("onClick", "return false");
            $("input[name='demande[Etablissement][typeAutreEtablissement]'][value='" + level + "']").prop("checked", true);
            keepOther();
            $('#demande_Etablissement_uai').val('');
            $('#uai').show();
        } else if (typeInstitute.hasOwnProperty('centre')) {
            $('#demande_Etablissement_TypeGeneral').val('centre').prop('disabled', true);
            level = typeInstitute['centre'];
            $("input[name='demande[Etablissement][typeCentre]']").prop("readonly", true).attr("onClick", "return false");
            $("input[name='demande[Etablissement][typeCentre]'][value='" + level + "']").prop("checked", true);
            keepCenter();
            $('#demande_Etablissement_uai').val('');
            $('#uai').hide();
        } else if (typeInstitute.hasOwnProperty('ens')) {
            $('#demande_Etablissement_TypeGeneral').val('ens').prop('disabled', true);
            level = typeInstitute['ens'];
            $("input[name='demande[Etablissement][typeEnseignement]']").prop("readonly", true).attr("onClick", "return false");
            $("input[name='demande[Etablissement][typeEnseignement]'][value='" + level + "']").prop("checked", true);
            keepInstitute();
            $('#demande_Etablissement_uai').val('');
            $('#uai').show();
        }

        function keepInstitute() {
            var centerElt = document.getElementById("demande_Etablissement_typeCentre").parentNode.parentNode;
            var instituteElt = document.getElementById("demande_Etablissement_typeEnseignement").parentNode.parentNode;
            var othersElt = document.getElementById("demande_Etablissement_typeAutreEtablissement").parentNode.parentNode;
            $(instituteElt).show().removeAttr("disabled");
            $(centerElt).hide().prop("disabled", true);
            $(othersElt).hide().prop("disabled", true);
        }

        function keepCenter() {
            var centerElt = document.getElementById("demande_Etablissement_typeCentre").parentNode.parentNode;
            var instituteElt = document.getElementById("demande_Etablissement_typeEnseignement").parentNode.parentNode;
            var othersElt = document.getElementById("demande_Etablissement_typeAutreEtablissement").parentNode.parentNode;
            $(centerElt).show().removeAttr("disabled");
            $(instituteElt).hide().prop("disabled", true);
            $(othersElt).hide().prop("disabled", true);
        }

        function keepOther() {
            var centerElt = document.getElementById("demande_Etablissement_typeCentre").parentNode.parentNode;
            var instituteElt = document.getElementById("demande_Etablissement_typeEnseignement").parentNode.parentNode;
            var othersElt = document.getElementById("demande_Etablissement_typeAutreEtablissement").parentNode.parentNode;
            $(othersElt).show().removeAttr("disabled");
            $(centerElt).hide().prop("disabled", true);
            $(instituteElt).hide().prop("disabled", true);
        }

        function verifyAll(e) {
            verifyNumber(e);
            verifyCP(e);
            verifyEmail(e);
            verifyIntervention(e);
            $('.error').focus();
            $('.errorMail').focus();
            $('#add_intervention').focus();
        }

        function verifyNumber(e) {
            var re = /^((0)[1-9][0-9]{8})?$/;
            if (!(re.test($('#demande_Contact_telFixe').val()))){
                e.preventDefault();
                e.stopPropagation();
                $('#numeroFixe').show();
                $('#demande_Contact_telFixe').addClass('error');
            } else {
                $('#numeroFixe').hide();
                $('#demande_Contact_telFixe').removeClass('error');
            }
            if (!(re.test($('#demande_Contact_telPortable').val()) )) {
                e.preventDefault();
                e.stopPropagation();
                $('#numeroPortable').show();
                $('#demande_Contact_telPortable').addClass('error');
            } else {
                $('#numeroPortable').hide();
                $('#demande_Contact_telPortable').removeClass('error');
            }
        }

        function verifyCP(e) {
            if (!(/[0-9]{5}/.test($('#demande_Etablissement_adresse_codePostal').val()))) {
                e.preventDefault();
                e.stopPropagation();
                $('#code').show();
                $('#demande_Etablissement_adresse_codePostal').addClass('error');
            } else
                $('#code').hide();
                $('#demande_Etablissement_adresse_codePostal').removeClass('error');

        }

        function verifyEmail(e) {
            var re = /^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,63}$/;
            if (!(re.test($('#demande_Contact_email').val()))) {
                e.preventDefault();
                e.stopPropagation();
                $('#email').show();
                $('#demande_Contact_email').addClass('error');
            } else {
                $('#email').hide();
                $('#demande_Contact_email').removeClass('error');
            }
            $('[id^=demande_Etablissement_emails_]').each(function () {
                if (!re.test($(this).val())) {
                    e.preventDefault();
                    e.stopPropagation();
                    $(this).addClass('errorMail');
                    $("<div id='email'> Email au mauvais format <div>").insertAfter($(this))
                } else {
                    $(this).removeClass('errorMail');
                    $(this).next().remove();
                }
            });

        }

        function verifyCodeUai(codeUai) {
            // alphabet pris en compte (23 lettres, sans I, O et Q)
            var alphabet = 'abcdefghijklmnopqrstuvwxyz';

            // On supprime les espaces et on met tout en minuscules
            var codeUaiPropre = codeUai.trim().toLowerCase();

            // On récupère les chiffres et les lettres dans des variables séparées
            var codeUaiPropreChiffres = codeUaiPropre.substring(0, 7);
            var codeUaiPropreLettre = codeUaiPropre.substring(7);

            // Le rang de la lettre correspond au reste de la division par 23
            var rangCalcule = codeUaiPropreChiffres % 23;

            // On récupère la lettre calculée dans l'alphabet
            var lettreCalculee = alphabet[rangCalcule];

            // On compare la lettre du code UAI à la lettre calculée et on retourne TRUE ou FALSE
            return codeUaiPropreLettre == lettreCalculee;
        }

        function verifyIntervention(e) {
            if ($('div#demande_Intervention fieldset:first-child').length==0) {
                e.preventDefault();
                e.stopPropagation();
                $('#intervention').show();
            } else {
                $('#intervention').hide();
            }
        }

        document.addEventListener('submit', verifyAll);


        function construction(item) {
            var newLineElt = document.createElement('tr');
            var columnHeadElt = document.createElement('td');
            $(item.getElementsByTagName('label')[0]).detach().appendTo($(columnHeadElt));
            $(columnHeadElt).detach().appendTo($(newLineElt));
            while (item.getElementsByTagName('input').length > 0) {
                var columnElt = document.createElement('td');
                var inputElt = item.getElementsByTagName('input')[0];
                $(inputElt).detach().appendTo($(columnElt));
                $(columnElt).detach().appendTo($(newLineElt));
            }

            $(newLineElt).detach().appendTo($(tblElt));
        }

        function constructHeader(item) {
            var theadElt = document.createElement('thead');
            var newLineElt = document.createElement('tr');
            var columnHeadElt = document.createElement('th');
            columnHeadElt.textContent = '#';
            $(columnHeadElt).detach().appendTo($(newLineElt));
            while (item.length > 0) {
                var columnElt = document.createElement('th');
                var inputElt = item[0];
                $(inputElt).detach().appendTo($(columnElt));
                $(columnElt).detach().appendTo($(newLineElt));
            }
            $(newLineElt).detach().appendTo($(theadElt));
            $(theadElt).detach().appendTo($(tblElt));
        }

        var tblElt = document.createElement('table');
        $(tblElt).addClass('table table-bordered table-striped');

        for (var i = 0; i < document.getElementsByClassName('jours')[0].getElementsByClassName('form-group').length; i++) {
            construction(document.getElementsByClassName('jours')[0].getElementsByClassName('form-group')[i]);
        }

        constructHeader(document.getElementsByClassName('jours')[0].getElementsByClassName('form-group')[0].getElementsByTagName('label'));


        $('#demande_jour').replaceWith($(tblElt));

        //initialisation
        $('.form-group:eq(8)').fadeOut("fast");
        switch ($("#demande_Etablissement_TypeGeneral").val()) {
            case 'ens' :
                keepInstitute();
                break;
            case 'centre' :
                keepCenter();
                break;
            case 'autre' :
                keepOther();
                break;
        }


        $(document).ready(function () {

            // Pré-cocher les jours de l'intervention en "Jour à éviter"
            $('#demande_jour_lundi_3').prop("checked", true);
            $('#demande_jour_mardi_3').prop("checked", true);
            $('#demande_jour_mercredi_3').prop("checked", true);
            $('#demande_jour_jeudi_3').prop("checked", true);
            $('#demande_jour_vendredi_3').prop("checked", true);
            $('#demande_jour_samedi_3').prop("checked", true);

            // Initialisation
            $('#code').hide();
            $('#numeroFixe').hide();
            $('#numeroPortable').hide();
            $('#intervention').hide();
            $('#email').hide();

            $("label:contains(\"Informations de l'établissement\")").hide();

            // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
            var $container_intervention = $('div#demande_Intervention');

            // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
            var index_intervention = $container_intervention.find(':input').length;

            // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
            $('#add_intervention').click(function (e) {
                addIntervention($container_intervention);
                e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                return false;
            });

            if (index_intervention == 0) {
                addIntervention($container_intervention);
            } else {
                $container_intervention.children('div').each(function () {
                    addDeleteLink($(this));
                });
            }

            function addIntervention($container) {
                var template = $container.attr('data-prototype')
                    .replace(/__name__label__/g, '')
                    .replace(/__name__/g, index_intervention);
                // On crée un objet jquery qui contient ce template
                var $prototype = $(template);

                addDeleteLink($prototype);

                $container.append($prototype);
                $("#add_intervention").appendTo($container);
                treatmentSelect();
                displayThemeIntervention();
                displayTypeIntervention($($prototype).children().find("select").get(0));
                $($prototype).children().find("select").on("change", displayTypeIntervention);
                // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
                index_intervention++;
                $(':input[type="number"]').attr("min", 0).keyup(function () {
                    this.value = this.value.replace(/[^0-9\.]/g, '');
                });
            }


            function addDeleteLink($prototype) {
                // Création du lien
                var $deleteLink = $('<a href="#" class="btn btn-danger">Supprimer</a>');
                // Ajout du lien
                $prototype.append($deleteLink);
                // Ajout du listener sur le clic du lien pour effectivement
                $deleteLink.click(function (e) {
                    $prototype.remove();
                    e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                    return false;
                });
            }

            var addInterElt = document.createElement('a');
            addInterElt.id = 'add_email';
            buttonAddElement = document.createElement('button');
            buttonAddElement.className = 'btn btn-success';
            buttonAddElement.textContent = 'Ajouter un Email';
            addInterElt.appendChild(buttonAddElement);
            document.getElementById('demande_Etablissement_emails').appendChild(addInterElt);

            // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
            var $container_email = $('#demande_Etablissement_emails');

            // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
            var index_email = $container_email.find(':input').length;

            // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
            $('#add_email').click(function (e) {
                addEmail($container_email);

                e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                return false;
            });

            // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvelle annonce par exemple).
            if (index_email == 0) {
                addEmail($container_email);
            } else {
                // S'il existe déjà des catégories, on ajoute un lien de suppression pour chacune d'entre elles
                $container_email.children('div').each(function () {
                    addDeleteLink($(this));
                });
            }

            // La fonction qui ajoute un formulaire CategoryType
            function addEmail($container) {
                // Dans le contenu de l'attribut « data-prototype », on remplace :
                // - le texte "__name__label__" qu'il contient par le label du champ
                // - le texte "__name__" qu'il contient par le numéro du champ
                var template = $container.attr('data-prototype')
                    .replace(/__name__label__/g, '')
                    .replace(/__name__/g, index_email);

                // On crée un objet jquery qui contient ce template
                var $prototype = $(template);

                // On ajoute au prototype un lien pour pouvoir supprimer la catégorie
                addDeleteLink($prototype);

                // On ajoute le prototype modifié à la fin de la balise <div>
                $container.append($prototype);
                $("#add_email").appendTo($container);
                // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
                index_email++;
            }

            // La fonction qui ajoute un lien de suppression d'une catégorie
            function addDeleteLink($prototype) {
                // Création du lien
                var $deleteLink = $('<a href="#" class="btn" style="padding-top: 0px !important; padding-bottom: 0px !important;  color:#3c3c3c; background-color:#fff; display: inline; font-weight: 600; font-size: 25px; padding: 5px; height: 30px">×</a>');

                // Ajout du lien
                $prototype.append($deleteLink);

                // Ajout du listener sur le clic du lien pour effectivement supprimer la catégorie
                $deleteLink.click(function (e) {
                    $prototype.remove();

                    e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                    return false;
                });
            }

        });
        var centerElt = document.getElementById("demande_Etablissement_typeCentre").parentNode.parentNode;
        var instituteElt = document.getElementById("demande_Etablissement_typeEnseignement").parentNode.parentNode;
        var othersElt = document.getElementById("demande_Etablissement_typeAutreEtablissement").parentNode.parentNode;
        $(instituteElt).find("input").on("click", displayThemeIntervention).on("click", treatmentSelect);
        $(centerElt).find("input").on("click", displayThemeIntervention).on("click", treatmentSelect);
        $(othersElt).find("input").on("click", displayThemeIntervention).on("click", treatmentSelect);
        document.getElementById('demande_Etablissement_TypeGeneral').addEventListener('change', displayThemeIntervention);
    </script>

{% endblock %}


